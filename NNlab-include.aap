:python
    NNlab_home = os.getenv("NNlab_home",None)
    if NNlab_home is None:
	NNlab_home = "http://www.tcm.phy.cam.ac.uk/~nn245/NNlab"

    NNlab_path = os.getenv("NNlab_path",None)
    if NNlab_path is None:
	NNlab_path = os.environ.get("HOME") + "/NNlab"

:recipe {fetch = $NNlab_home/NNlab-include.aap}

PREFIX = $NNlab_path

BINDIR = $NNlab_path/bin

WRKDIR = $NNlab_path/src

DOCDIR = $NNlab_path/doc

TMPDIR = $NNlab_path/tmp

DOWNLOADDIR = $NNlab_path/download

SOURCEFORGE = http://ovh.dl.sourceforge.net/sourceforge
# SOURCEFORGE = http://mesh.dl.sourceforge.net/sourceforge


:python
    if "CPPFLAGS" in os.environ:
        os.environ["CPPFLAGS"] += " -I" + _no.PREFIX + "/include"
    else:
	os.environ["CPPFLAGS"] = "-I" + _no.PREFIX + "/include"
    
    if "LDFLAGS" in os.environ:
        os.environ["LDFLAGS"] += " -L" + _no.PREFIX + "/lib"
    else:
        os.environ["LDFLAGS"] = "-L" + _no.PREFIX + "/lib"


:rule $NNlab_path/patches/%:
    :mkdir {r} {f} $target
    :cd $target
    :fetch series {fetch = $NNlab_home/patches/$match/%basename%}
    @for p in file('series','r').readlines():
        :fetch `p.strip()` {fetch = $NNlab_home/patches/$match/%basename%}

:action patch default
    PATCHDIR = $NNlab_path/patches/$source
    :update $PATCHDIR
#    :mkdir {r} {f} $PATCHDIR
#    :cd $PATCHDIR
#    :fetch series {fetch = $NNlab_home/patches/$source/%basename%}
#    @for p in file('series','r').readlines():
#        :fetch `p.strip()` {fetch = $NNlab_home/patches/$source/%basename%}
    :cd $WRKDIR/$source
    :symlink {q} $PATCHDIR patches
    :sys quilt push -a

:action unpack default
    :cd $TMPDIR
    :del {r}{f} $NAME
    :mkdir $NAME
    :cd $NAME
    :do extract $source
    :del {r}{f} $WRKDIR/$NAME
    :move * $WRKDIR/$NAME
    :cd $TMPDIR
    :deldir $NAME
